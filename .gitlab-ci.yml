variables:
  JAR_FILE_NAME: imdbgraph-0.0.1-SNAPSHOT.jar

stages:
  - build
  - test
  - configure
  - deploy

default:
  image: openjdk:17-buster
  before_script:
    - GRADLE_USER_HOME="$(pwd)/.gradle"
    - export GRADLE_USER_HOME

# Setting up SSH: https://docs.gitlab.com/ee/ci/ssh_keys/
.set-up-ssh: &set-up-ssh
  # Install ssh-agent if not already installed
  - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  # Why eval the output of ssh-agent?
  # (https://unix.stackexchange.com/q/351725/169515)
  - eval $(ssh-agent -s)

  # Give the right permissions, otherwise ssh-add will refuse to add files
  # Add the SSH key stored in SSH_PRIVATE_KEY file type CI/CD variable to the agent store
  - chmod 400 "$SSH_PRIVATE_KEY"
  - ssh-add "$SSH_PRIVATE_KEY"

  # Create the SSH directory and give it the right permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  # Add server to known_hosts
  - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

# Set up postgres database for integration tests
.set-up-test-database: &set-up-test-database
  variables:
    POSTGRES_DB: $DATABASE_DB
    POSTGRES_USER: $DATABASE_USER
    POSTGRES_PASSWORD: $DATABASE_PASSWORD
    # Environment variable used by psql to supply password. Separate from POSTGRES_PASSWORD.
    PGPASSWORD: $DATABASE_PASSWORD
  services:
    - postgres:15.2-bullseye
  before_script:
    - apt-get update && apt-get install -y postgresql-client
    - psql -h postgres -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f "init.sql"

build:
  stage: build
  script: ./gradlew --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/libs/$JAR_FILE_NAME

test:
  stage: test
  <<: *set-up-test-database
  script:
    - ./gradlew check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/**/TEST-*.xml

configure:
  stage: configure
  image: python:3.11.2-buster
  only:
    - master
  before_script:
    *set-up-ssh
  script:
    - pip install ansible
    - cd infra
    - ansible-playbook -i production.ini site.yml

deploy:
  stage: deploy
  when: manual
  only:
    - master
  before_script:
    *set-up-ssh
  script:
    - scp "build/libs/${JAR_FILE_NAME}" "${SERVER_USER}@${SERVER_HOST}:~/${JAR_FILE_NAME}"
    - ssh "${SERVER_USER}@${SERVER_HOST}" "sudo systemctl start imdbgraph-api.service"
