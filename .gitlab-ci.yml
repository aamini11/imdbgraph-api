variables:
  JAR_FILE_NAME: imdbgraph-0.0.1-SNAPSHOT.jar

  POSTGRES_HOST: postgres
  POSTGRES_DB: test_db
  POSTGRES_USER: test_user
  POSTGRES_HOST_AUTH_METHOD: trust

stages:
  - test
  - configure
  - deploy

default:
  image: openjdk:17-buster
  # Cache downloaded dependencies and plugins between builds.
  cache:
    paths:
      - .m2/repository

# Setting up SSH: https://docs.gitlab.com/ee/ci/ssh_keys/
.set-up-ssh: &set-up-ssh
  # Install ssh-agent if not already installed
  - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  # Why eval the output of ssh-agent?
  # (https://unix.stackexchange.com/q/351725/169515)
  - eval $(ssh-agent -s)

  # Give the right permissions, otherwise ssh-add will refuse to add files
  # Add the SSH key stored in SSH_PRIVATE_KEY file type CI/CD variable to the agent store
  - chmod 400 "$SSH_PRIVATE_KEY"
  - ssh-add "$SSH_PRIVATE_KEY"

  # Create the SSH directory and give it the right permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  # Add server to known_hosts
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

test:
  stage: test
  # Postgres database required for integration testing
  services:
    - postgres:15.2-bullseye
  before_script:
    - apt-get update && apt-get install -y postgresql-client
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f "init.sql"

  script:
    - ./mvnw verify
  artifacts:
    paths:
      - target/$JAR_FILE_NAME
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml

configure-environment:
  stage: configure
  image: python:3.11.2-buster
  before_script:
    *set-up-ssh
  script:
    - python3 -m pip install ansible
    - cd infra
    - ansible-playbook -i production.ini --vault-password-file password.txt site.yml

deploy-digitalocean:
  stage: deploy
  when: manual
  only:
    - master
  before_script:
    *set-up-ssh
  script:
    - scp "target/${JAR_FILE_NAME}" "${SERVER_USER}@${SERVER_HOST}:~/${JAR_FILE_NAME}"
    - ssh "${SERVER_USER}@${SERVER_HOST}" "sudo systemctl restart imdbgraph.service"
