variables:
  JAR_FILE_NAME: imdbgraph-0.0.1-SNAPSHOT.jar

  POSTGRES_HOST: postgres
  POSTGRES_DB: test_db
  POSTGRES_USER: test_user
  POSTGRES_HOST_AUTH_METHOD: trust

  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

image: openjdk:17-alpine

stages:
  - build
  - deploy

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - .m2/repository

build-and-test:
  stage: build

  # Postgres database required for integration testing
  services:
    - postgres
  before_script:
    - apk add postgresql-client
  script:
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f "init.sql"
    - ./mvnw $MAVEN_CLI_OPTS verify

  artifacts:
    paths:
      - target/$JAR_FILE_NAME
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml

deploy-digitalocean:
  stage: deploy
  when: manual

  # Setting up SSH: https://docs.gitlab.com/ee/ci/ssh_keys/
  before_script:
    # Install ssh-agent if not already installed
    - command -v ssh-agent >/dev/null || ( apk --update add openssh-client )

    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    # Why eval the output of ssh-agent? (https://unix.stackexchange.com/q/351725/169515)
    - eval $(ssh-agent -s)
    # Create the SSH directory and give it the right permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Add SSH key
    - echo "$SSH_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    # Add server to known_hosts
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp "target/${JAR_FILE_NAME}" "${SERVER_USER}@${SERVER_HOST}:~/${JAR_FILE_NAME}"
    - ssh "${SERVER_USER}@${SERVER_HOST}" "sudo systemctl restart imdbgraph.service"
