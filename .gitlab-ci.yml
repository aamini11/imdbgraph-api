variables:
  POSTGRES_HOST: 'postgres'
  POSTGRES_DB: 'test_db'
  POSTGRES_USER: 'test_user'
  POSTGRES_HOST_AUTH_METHOD: 'trust'

  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

image: openjdk:16-alpine

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - .m2/repository
  key: "$CI_JOB_NAME"

stages:
  - build
  - test

build-jar:
  stage: build
  script: ./mvnw $MAVEN_CLI_OPTS -DskipTests package
  artifacts:
    paths:
      - target/imdbgraph-0.0.1-SNAPSHOT.jar

integration-tests:
  stage: test
  services:
    # Postgres database required for integration testing
    - postgres

  before_script:
    - apk add postgresql-client
  script:
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f "init.sql"
    - ./mvnw $MAVEN_CLI_OPTS verify

  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
