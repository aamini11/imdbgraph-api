stages:
  - test
  - publish
  - release
  - deploy

# https://cookbook.gradle.org/ci/gitlab-ci/#enable-caching
.gradle: &gradle
  image: openjdk:21-buster
  variables:
    GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle
  cache:
    paths:
      - .gradle/wrapper
    key:
      files:
        - gradle/wrapper/gradle-wrapper.properties

test_job:
  <<: *gradle
  stage: test
  script:
    - "./gradlew check -Pversion=$CI_COMMIT_TAG"
  artifacts:
    when: always
    reports:
      junit:
        - build/test-results/test/**/TEST-*.xml
        - build/test-results/integrationTest/**/TEST-*.xml
  # ===================== Set up DB for integration tests ======================
  variables:
    POSTGRES_DB: $DATABASE_DB
    POSTGRES_USER: $DATABASE_USER
    POSTGRES_PASSWORD: $DATABASE_PASSWORD
    PGPASSWORD: $DATABASE_PASSWORD # Used by psql. (Diff from POSTGRES_PASSWORD)
  services:
    - postgres:15.2-bullseye
  before_script:
    - apt-get update && apt-get install -y postgresql-client
    - psql -h postgres -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f "init.sql"
  # ============================================================================

publish_job:
  <<: *gradle
  stage: publish
  script:
    ./gradlew bootBuildImage

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG # Run this job when a tag is created
  script:
    - echo "Running the release job."
  release:
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release created using the release-cli.'
    assets:
      links:
        - name: imdbgraph-api-$CI_COMMIT_TAG.jar
          url: '$CI_SERVER_URL/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/download?file_type=archive'

deploy_job:
  stage: deploy
  image: python:3.11.2-buster
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    # Run ansible playbooks to make sure infra is configured
    - pip install ansible
    - cd infra/ansible
    - ansible-playbook -i production.ini -e @secrets.enc --vault-password-file $ANSIBLE_PASSWORD_FILE site.yml

    # Restart service with new JAR
    - ssh "${SERVER_USER}@${SERVER_HOST}" "sudo systemctl stop imdbgraph-api.service"
    - scp "build/libs/imdbgraph-api-*.jar" "${SERVER_USER}@${SERVER_HOST}:~/imdbgraph-api-*.jar"
    - ssh "${SERVER_USER}@${SERVER_HOST}" "sudo systemctl start imdbgraph-api.service"

  # ================= https://docs.gitlab.com/ee/ci/ssh_keys  ==================
  before_script:
    # Install ssh-agent
    - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )

    # https://unix.stackexchange.com/q/351725
    - eval $(ssh-agent -s)

    # Give right permissions so ssh-add can add SSH key to agent store.
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"

    # Add to known_hosts
    - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  # ============================================================================
