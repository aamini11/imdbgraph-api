- name: Install Docker
  become: true
  # https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
  # https://docs.docker.com/engine/install/linux-postinstall/
  block:
    - name: Ensure keyring directory exists
      file:
        path: /etc/apt/keyrings
        state: directory
    - name: Add Docker apt key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0444'
    - name: Add Docker Repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    - name: Install Docker
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true
    # Set up permissions to run docker without root.
    - name: Create docker group
      group:
        name: docker
        state: present
    - name: Create docker user
      user:
        name: docker
        groups: docker
        append: true
      register: result
    - name: Adding existing user '{{ ansible_user }}' to group docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
    # SSH reset required after user creation: https://stackoverflow.com/a/44753457
    - name: Reset ssh connection to allow user changes to affect 'current login user'
      ansible.builtin.meta: reset_connection

- name: Login to Docker
  docker_login:
    registry: "{{ lookup('env', 'CI_REGISTRY') }}"
    username: "{{ lookup('env', 'CI_REGISTRY_USER') }}"
    password: "{{ lookup('env', 'CI_REGISTRY_PASSWORD') }}"

- name: Create data directory
  file:
    name: "/home/{{ ansible_user }}/data"
    state: directory

- name: Run app container
  docker_container:
    image: "registry.gitlab.com/imdbgraph/imdbgraph-api:main"
    name: imdbgraph-api
    pull: true
    state: started
    network_mode: host # only needed if db and server on same machine.
    restart_policy: always
    volumes: ~/data:/var/lib/imdbgraph-api/data/
    env:
      DATABASE_HOST: "{{ db_host }}"
      DATABASE_NAME: "{{ db_name }}"
      DATABASE_USER: "{{ db_user }}"
      DATABASE_PASSWORD: "{{ db_password }}"
      OMDB_KEY: "{{ lookup('env', 'OMDB_KEY') }}"